{"version":3,"sources":["Store/reducers/gameReducer/gameTypes.ts","Store/reducers/gameReducer/gameActions.ts","Components/Figures/BaseFigure.tsx","Components/Tetter/Tetter.tsx","Components/Content.tsx","Components/Buttons/Button.tsx","Components/Counters/Counter.tsx","start.svg","pause.svg","Components/Header.tsx","Store/reducers/gameReducer/gameReducer.ts","Store/rootReducer.ts","Store/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TOGGLE_GAME_STATE","START_GAME","RESTART_GAME","GAME_OVER","CALC_ROTATION","ADD_POINTS","ADD_LEFT","ADD_RIGHT","NEW_FALLING_ITEM","NEW_RIGHT_ITEM","FALLING_END","toggleGameState","payload","type","startGame","restartGame","gameOver","calcRotation","types","BaseFigure","props","dispatch","useDispatch","gameEnd","useSelector","state","game","gameStatus","gameState","useState","right","undefined","weight","Math","random","toFixed","top","setTop","left","setLeft","floor","length","falling","setFalling","parseInt","height","width","color","toString","textColor","moveFigure","event","keyPr","code","window","requestAnimationFrame","endFalling","points","fallingEnd","key","Date","now","force","randomRight","randomWeight","newRightItem","setTimeout","newFallingItem","useEffect","addEventListener","removeEventListener","tetter","document","querySelector","detector","mainTetterY","getBoundingClientRect","y","tetterDetectorY","trunc","collisionDetected","typeStyle","borderLeft","borderRight","borderBottom","borderRadius","backgroundColor","className","style","margin","padding","fontSize","position","transform","rotation","Tetter","leftItems","rightElements","rightItems","totalLeftForce","totalRightForce","bending","map","elem","Content","started","rotating","fallingItems","changeState","onClick","item","Button","image","src","label","Counter","value","Header","speed","leftWeight","rightWeight","totalPoints","pause","start","INITIAL_STATE","falingItems","gameReducer","action","rootReducer","combineReducers","store","createStore","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.183a0db5.chunk.js","sourcesContent":["//GAME STATE\r\nexport const TOGGLE_GAME_STATE = 'TOGGLE_STATE'; //pause //start\r\nexport const START_GAME = 'START_GAME'//START GAME\r\nexport const TOGGLE_GAME_AUTOPLAY = 'TOGGLE_AUTOPLAY'; //pause //start\r\nexport const RESTART_GAME = 'RESTART_GAME';\r\nexport const GAME_OVER = 'GAME_OVER';\r\n\r\n\r\n//CALCULATIONS\r\nexport const CALC_ROTATION = 'CALC_ROTATION';\r\n\r\n\r\n\r\n//GAME STATE HANDLERS\r\nexport const ADD_POINTS = 'ADD_POINTS';\r\nexport const ADD_LEFT = 'ADD_LEFT';\r\nexport const ADD_RIGHT = 'ADD_RIGHT';\r\nexport const INCREASE_SPEED = 'INCREASE_SPEED';\r\n\r\n\r\n//FIGURES MOVEMENT\r\n//generate new item\r\nexport const NEW_FALLING_ITEM = 'NEW_FALLING_ITEM';\r\n//generate new right item\r\nexport const NEW_RIGHT_ITEM = 'NEW_RIGHT_ITEM';\r\n//add falling items to teetter items\r\nexport const FALLING_END = 'FALLING_END';\r\n//generate new auto pl\r\nexport const NEW_FALLING_AUTOPLAY = 'NEW_FALLING_AUTOPLAY';\r\n\r\n\r\n","import {\r\n    TOGGLE_GAME_STATE,\r\n    TOGGLE_GAME_AUTOPLAY,\r\n    RESTART_GAME,\r\n    GAME_OVER,\r\n    CALC_ROTATION,\r\n    ADD_POINTS,\r\n    NEW_FALLING_ITEM,\r\n    NEW_RIGHT_ITEM,\r\n    FALLING_END,\r\n    NEW_FALLING_AUTOPLAY,\r\n    INCREASE_SPEED,\r\n    START_GAME,\r\n    ADD_RIGHT,\r\n    ADD_LEFT\r\n} from './gameTypes';\r\n\r\n\r\nexport const toggleGameState = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: TOGGLE_GAME_STATE,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const startGame = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: START_GAME,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\n\r\n\r\nexport const toggleGameAutoplay = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: TOGGLE_GAME_AUTOPLAY,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const restartGame = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: RESTART_GAME,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const gameOver = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: GAME_OVER,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const increaseSpeed = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: INCREASE_SPEED,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const calcRotation = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: CALC_ROTATION,\r\n        payload\r\n\r\n    };\r\n\r\n};    \r\n\r\n\r\nexport const addPoints = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: ADD_POINTS,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const addLeft = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: ADD_LEFT,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const addRight = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: ADD_RIGHT,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const newFallingItem = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: NEW_FALLING_ITEM,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const newRightItem = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: NEW_RIGHT_ITEM,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\n\r\nexport const fallingEnd = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: FALLING_END,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n\r\nexport const newFallingItemAuto = (payload: any) => {\r\n\r\n    return {\r\n\r\n        type: NEW_FALLING_AUTOPLAY,\r\n        payload\r\n\r\n    };\r\n\r\n};\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport '../../Styles/figure.scss'\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { addPoints, fallingEnd, newFallingItem, newRightItem } from '../../Store/reducers/gameReducer/gameActions';\r\n\r\ntype BaseFigureProps = {\r\n    falling: boolean;\r\n    rotation?: number;\r\n    left?: number;\r\n    weight?: string;\r\n    right?: any;\r\n    color?: string;\r\n    type?: string;\r\n}\r\n\r\nconst types = [\r\n    'circle',\r\n    'rectangle',\r\n    'triangle'\r\n]\r\n\r\n\r\n\r\nexport const BaseFigure = (props:BaseFigureProps) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const gameEnd = useSelector((state:RootStateOrAny) => state.game.gameEnd);\r\n    const gameStatus = useSelector((state:RootStateOrAny) => state.game.gameState);\r\n    const [right, setRight] = useState<boolean>(props.right !== void 0 ? props.right : false);\r\n    const [weight, setWeight] = useState(props.weight !== undefined ? props.weight : (Math.random() * (10 - 1) + 1).toFixed());\r\n    const [top, setTop] = useState(120);\r\n    const [left, setLeft] = useState(props.left !== void 0 ? props.left : 0);\r\n\r\n    const [type, setType] = useState(props.type ? props.type : types[Math.floor(Math.random() * types.length)]);\r\n\r\n\r\n    const [falling, setFalling] = useState<boolean>(!props.falling ? props.falling : true);\r\n    const [height, setHeight] = useState((30+(parseInt(weight)*5)));\r\n    const [width, setWidth] = useState((30+(parseInt(weight)*5)));\r\n    const [color, setColor] = useState(props.color ? props.color : `#${Math.floor(Math.random()*16777215).toString(16)}`);\r\n    const [textColor, setTextColor] = useState('black');\r\n\r\n\r\n    \r\n\r\n\r\n    \r\n\r\n    \r\n    const moveFigure = (event:any) => {\r\n        \r\n\r\n        if(!falling){\r\n            return\r\n        }\r\n\r\n        var keyPr = event.code;\r\n\r\n\r\n        \r\n        if(keyPr === \"ArrowLeft\"){ \r\n            if(left <= 0){\r\n                return;\r\n            }\r\n            window.requestAnimationFrame(()=>{\r\n                setLeft(left - 30);\r\n            });\r\n            \r\n        }\r\n        else if(keyPr === \"ArrowRight\"){\r\n            if(left >= (450-width)){\r\n                return;\r\n            }\r\n            window.requestAnimationFrame(()=>{\r\n                setLeft(left + 30);\r\n            });\r\n        }\r\n    }\r\n\r\n    const collisionDetected = () => {\r\n        let tetter = document.querySelector(\".tetter\");\r\n        let detector = document.querySelector(\".tetterDetector\");\r\n\r\n        let mainTetterY = tetter ? tetter?.getBoundingClientRect().y : 0;\r\n        let tetterDetectorY = detector ? detector?.getBoundingClientRect().y : 0;\r\n        \r\n\r\n        if((Math.trunc(mainTetterY)) <= (Math.trunc(tetterDetectorY))){\r\n            endFalling();\r\n        }\r\n    }\r\n\r\n    const startFalling = () => {\r\n        if(falling){\r\n            setTimeout(()=>{\r\n                setTop(top + 1);\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    const endFalling = () => {\r\n        setFalling(false);\r\n\r\n        //ADDING POINTS\r\n        dispatch(addPoints({points: parseInt(weight)/2}));\r\n\r\n        //INSERTING LEFT ELEMENT TO MAIN TEETER\r\n        dispatch(fallingEnd({\r\n            falling: false,\r\n            left: left,\r\n            weight: weight,\r\n            color: color,\r\n            type: type,\r\n            key: Date.now(),\r\n            force: ((500-width-left)*parseInt(weight))\r\n        }));\r\n\r\n\r\n        //GENERATING RANDOM VALUES FOR RIGHT FIGURE\r\n        const randomRight = (Math.random() * (400 - 1) + 1).toFixed();\r\n        const randomWeight = (Math.random() * (10 - 1) + 1).toFixed();\r\n\r\n        //NEW RANDOM RIGHT ITEM\r\n        dispatch(newRightItem({\r\n            falling: false,\r\n            weight: randomWeight,\r\n            type: types[Math.floor(Math.random() * types.length)],\r\n            color: `#${Math.floor(Math.random()*16777215).toString(16)}`,\r\n            key: Date.now(),\r\n            right: randomRight,\r\n            force: ((500-(30+(parseInt(randomWeight)*5))-parseInt(randomRight))*parseInt(randomWeight))\r\n        }))\r\n\r\n        //NEW FALLING ITEM\r\n        setTimeout(()=>{\r\n            dispatch(newFallingItem({}));\r\n        }, 1000);\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if(falling && gameStatus && !gameEnd){\r\n            window.addEventListener('keydown', moveFigure);\r\n\r\n            return () => {\r\n                window.removeEventListener('keydown', moveFigure);\r\n            };\r\n        }\r\n    }, [moveFigure]);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        \r\n        if(falling && gameStatus && !gameEnd){\r\n            startFalling();\r\n            collisionDetected()\r\n        }\r\n        \r\n\r\n    });\r\n\r\n\r\n    //GET CURRENT FIGURE STYLES BASED ON TYPE\r\n    const typeStyle = () => {\r\n        switch(type) {\r\n            case \"triangle\":\r\n                return {\r\n                    borderLeft: `${width}px solid transparent`,\r\n                    borderRight: `${width}px solid transparent`,\r\n                    borderBottom: `${width}px solid ${color}`\r\n                }\r\n            case \"circle\":\r\n                return {\r\n                    borderRadius: '50%',\r\n                    backgroundColor: color,\r\n                    height: `${height}px`,\r\n                    width: `${width}px`,\r\n                }\r\n            case \"rectangle\":\r\n                return {\r\n                    backgroundColor: color,\r\n                    height: `${height}px`,\r\n                    width: `${width}px`,\r\n                }\r\n            default:\r\n                return{\r\n                    backgroundColor: color,\r\n                    height: `${height}px`,\r\n                    width: `${width}px`\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n\r\n            {\r\n                //CHECK IF THIS FIGURE IS ON RIGHT SIDE\r\n                right ? \r\n                    <div className=\"figure\" style={{\r\n                        ...typeStyle(),\r\n                        top: `-${height}px`,\r\n                        right: `${right}px`}}\r\n                    >\r\n                        <h1 style={{margin: 0, padding: 0, color: textColor, fontSize: `${height/2}px`, position: 'absolute', ...(type === 'triangle'? {top: `${width/4}px`} : {})}}>{weight}</h1>\r\n                    </div>\r\n                    :\r\n                    falling ?\r\n                        <div className=\"tetterDetector\" style={{transform: `rotate(${props.rotation}deg)`, top: `${top}px`}}>\r\n                            <div className=\"figure\" style={{\r\n                                ...typeStyle(),\r\n                                top: `-${height}px`,\r\n                                left: `${left}px`\r\n                            }}>\r\n                                <h1 style={{\r\n                                    margin: 0,\r\n                                    padding: 0,\r\n                                    color: textColor,\r\n                                    fontSize: `${height/2}px`,\r\n                                    position: 'absolute',\r\n                                    ...(type === 'triangle'? {top: `${width/4}px`} : {})}}>\r\n                                        {weight}\r\n                                    </h1>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div className=\"figure\" style={{...typeStyle(), top: `-${height}px`, left: `${left}px`}}>\r\n                            <h1 style={{margin: 0, padding: 0, color: textColor, fontSize: `${height/2}px`, position: 'absolute', ...(type === 'triangle'? {top: `${width/4}px`} : {})}}>{weight}</h1>\r\n                        </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport '../../Styles/content.scss';\r\nimport { BaseFigure } from '../Figures/BaseFigure';\r\nimport { calcRotation, gameOver } from './../../Store/reducers/gameReducer/gameActions';\r\n\r\ntype TetterProps = {\r\n    rotation: string | number;\r\n}\r\n\r\n\r\n\r\nexport const Tetter = (props: TetterProps) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const leftItems = useSelector((state:RootStateOrAny) => state.game.leftItems);\r\n    const rightElements = useSelector((state:RootStateOrAny) => state.game.rightItems);\r\n\r\n    const totalLeftForce = useSelector((state:RootStateOrAny) => state.game.totalLeftForce);\r\n    const totalRightForce = useSelector((state:RootStateOrAny) => state.game.totalRightForce);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(totalLeftForce > totalRightForce){\r\n            const bending = (totalLeftForce - totalRightForce)/100\r\n            dispatch(calcRotation({rotation:(bending*-1).toFixed()}))\r\n            if(bending > 15){\r\n                dispatch(gameOver({}))\r\n                return\r\n            }\r\n            return\r\n        } else if(totalLeftForce < totalRightForce){\r\n            const bending = (totalRightForce - totalLeftForce)/100\r\n            dispatch(calcRotation({rotation:bending.toFixed() }))\r\n            if(bending > 15){\r\n                dispatch(gameOver({}))\r\n                return\r\n            }\r\n            return\r\n        }\r\n        \r\n        dispatch(calcRotation({rotation: 0}));\r\n\r\n    }, [totalLeftForce, totalRightForce]);\r\n\r\n\r\n    return(\r\n        <div className=\"tetter\" style={{transform: `rotate(${props.rotation}deg)`}}>\r\n            <div className=\"leftArea\">\r\n                {/* //map and show all left elements */}\r\n                {\r\n                    leftItems && leftItems.length > 0 ?\r\n                        leftItems.map((elem:any) => {\r\n                            return <BaseFigure key={elem.key} type={elem.type} color={elem.color} falling={elem.falling} left={elem.left} weight={elem.weight} />\r\n                        })\r\n                        :\r\n                        <></>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"rightArea\">\r\n                {/* //map and show all right elements */}\r\n                {\r\n                    rightElements && rightElements.length >= 0 ?\r\n                        rightElements.map((elem:any) => {\r\n                            return <BaseFigure weight={elem.weight} key={elem.key} type={elem.type} color={elem.color} falling={false} right={elem.right} />\r\n                        })\r\n                        :\r\n                        <></>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(Tetter);","import React, { useEffect } from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { restartGame, startGame, toggleGameState } from '../Store/reducers/gameReducer/gameActions';\r\nimport '../Styles/content.scss';\r\nimport { BaseFigure } from './Figures/BaseFigure';\r\nimport { Tetter } from './Tetter/Tetter';\r\n\r\n\r\ntype ContentProps = {\r\n\r\n}\r\n\r\n\r\n\r\nexport const Content = (props:ContentProps) => {\r\n    const dispatch = useDispatch();\r\n\r\n    //GET CURRENT GAME STATE\r\n    const gameEnd = useSelector((state:RootStateOrAny) => state.game.gameEnd);\r\n    const gameStatus = useSelector((state:RootStateOrAny) => state.game.gameState);\r\n    const started = useSelector((state:RootStateOrAny) => state.game.started);\r\n\r\n\r\n    const rotating = useSelector((state:RootStateOrAny) => state.game.rotating);\r\n    const fallingItems = useSelector((state:RootStateOrAny) => state.game.fallingItems);\r\n\r\n    const changeState = (event:any) => {\r\n        var keyPr = event.code;\r\n\r\n        if(gameEnd){\r\n            return\r\n        }\r\n\r\n        \r\n        if(keyPr === \"Space\"){\r\n            //if game is already started do pause/continue, else start the game\r\n            if(started){\r\n                dispatch(toggleGameState({}));\r\n                return;\r\n            }\r\n            dispatch(startGame({}));\r\n        }\r\n    }\r\n\r\n    //listen for space key to pause/start the game\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', changeState);\r\n\r\n        return () => {\r\n            window.removeEventListener('keydown', changeState);\r\n        };\r\n\r\n        \r\n    }, [changeState]);\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"content\">\r\n            {\r\n                started ?\r\n                    <div className={`pausedModal ${(gameStatus && !gameEnd ? '' : 'paused')}`}>\r\n                        {\r\n                            !gameEnd?\r\n                                <>\r\n                                    <h1>PAUSE</h1>\r\n                                    <h3>(Press space to continue)</h3>\r\n                                </>\r\n                                :\r\n                                <>\r\n                                    <h1>Game Over</h1>\r\n                                    <button className={\"restartButton\"} onClick={()=>{\r\n                                        dispatch(restartGame({}))\r\n                                    }}>Restart</button>\r\n                                </>\r\n                        }\r\n                    </div>\r\n                    :\r\n                    <></>\r\n            }\r\n\r\n\r\n            <div className=\"gameArea\">\r\n                \r\n                {/* Falling elements part */}\r\n                {\r\n                    fallingItems !== undefined && fallingItems.length > 0 ?\r\n                        fallingItems.map((item:any)=>{\r\n                            return <BaseFigure key={item.key} falling={true} rotation={rotating} />\r\n                        })\r\n                        :\r\n                        <></>\r\n                }\r\n\r\n\r\n                <Tetter rotation={rotating} />\r\n\r\n                {/* bottom of teeter */}\r\n                <div className=\"bottomTriangle\"></div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport '../../Styles/header.scss';\r\n\r\ntype ButtonProps = {\r\n    label?: string;\r\n    image?: any;\r\n    onClick?: ({}:any)=> void;\r\n}\r\n\r\n\r\nexport const Button = (props:ButtonProps) => {\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"button\" onClick={props.onClick}>\r\n            {\r\n                props.image ?\r\n                    <img style={{height:'50px', width: '50px'}} src={props.image} />\r\n                :\r\n                    <span className=\"label\">{props.label}</span>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\n\r\ntype CounterProps = {\r\n    label: string;\r\n    value: string | number;\r\n}\r\n\r\n\r\nexport const Counter = (props: CounterProps) => {\r\n    \r\n\r\n\r\n    return(\r\n        <div className=\"counter\">\r\n            <span className=\"label\">{props.label}</span>\r\n            <span className=\"value\">{props.value}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Counter;","export default __webpack_public_path__ + \"static/media/start.74daff10.svg\";","export default __webpack_public_path__ + \"static/media/pause.7059db03.svg\";","import React from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { restartGame, startGame, toggleGameState } from '../Store/reducers/gameReducer/gameActions';\r\nimport '../Styles/header.scss';\r\nimport { Button } from './Buttons/Button';\r\nimport Counter from './Counters/Counter';\r\n\r\nimport start from '../start.svg';\r\nimport pause from '../pause.svg';\r\n\r\ntype HeaderProps = {\r\n\r\n}\r\n\r\n\r\n\r\nexport const Header = (props:HeaderProps) => {\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    //GET CURRENT GAME STATES\r\n    const gameEnd = useSelector((state:RootStateOrAny) => state.game.gameEnd);\r\n    const gameStatus = useSelector((state:RootStateOrAny) => state.game.gameState);\r\n    const started = useSelector((state:RootStateOrAny) => state.game.started);\r\n\r\n    //COUNTERS\r\n    const rotating = useSelector((state:RootStateOrAny) => state.game.rotating);\r\n    const speed = useSelector((state:RootStateOrAny) => state.game.speed);\r\n    const leftWeight = useSelector((state:RootStateOrAny) => state.game.leftWeight);\r\n    const rightWeight = useSelector((state:RootStateOrAny) => state.game.rightWeight);\r\n    const totalPoints = useSelector((state:RootStateOrAny) => state.game.totalPoints);\r\n    \r\n\r\n\r\n    const gameStateToggle = () => {\r\n        if(gameEnd){\r\n            dispatch(restartGame({}))\r\n            return\r\n        }\r\n        if(started){\r\n            \r\n            dispatch(toggleGameState({}));\r\n            return;\r\n        }\r\n        dispatch(startGame({}));\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"logo\">\r\n                <h2>Teeter totter - React</h2>\r\n            </div>\r\n\r\n            <div className=\"control\">\r\n                <Button image={(!gameStatus?start:pause)} onClick={gameStateToggle} />\r\n                \r\n                <Counter label=\"Bending\" value={`${rotating*2}%`} />\r\n                <Counter label=\"Speed\" value={`${speed}`}  />\r\n                <Counter label=\"Left weight\" value={`${leftWeight}`}  />\r\n                <Counter label=\"Right weight\" value={`${rightWeight}`}  />\r\n                <Counter label=\"Points\" value={`${totalPoints}`}  />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import { BaseFigure } from '../../../Components/Figures/BaseFigure';\r\nimport {\r\n    TOGGLE_GAME_STATE,\r\n    RESTART_GAME,\r\n    GAME_OVER,\r\n    CALC_ROTATION,\r\n    ADD_POINTS,\r\n    NEW_FALLING_ITEM,\r\n    NEW_RIGHT_ITEM,\r\n    FALLING_END,\r\n    START_GAME,\r\n    ADD_LEFT,\r\n    ADD_RIGHT\r\n} from './gameTypes';\r\n\r\n\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    gameState: false,\r\n    started: false,\r\n    rotating: 11,\r\n    speed: 1,\r\n    leftWeight: 0,\r\n    rightWeight: 0,\r\n    totalPoints: 0,\r\n    leftItems: <any>[],\r\n    rightItems: <any>[],\r\n    falingItems: <any>[],\r\n    totalLeftForce: 0,\r\n    totalRightForce: 0,\r\n    gameEnd: false\r\n};\r\n\r\n\r\ntype reducerType = {\r\n    type: string;\r\n    payload: any;\r\n}\r\n\r\n\r\nconst gameReducer = (state = INITIAL_STATE, action:reducerType) => {\r\n\r\n    switch (action.type) {\r\n        case TOGGLE_GAME_STATE:\r\n            return {\r\n\r\n                ...state,\r\n                gameState: !state.gameState,\r\n                started: true\r\n            };\r\n        case RESTART_GAME:\r\n            return {\r\n\r\n                ...state,\r\n                gameState: !state.gameState,\r\n                leftWeight: 0,\r\n                rightWeight: 0,\r\n                totalPoints: 0,\r\n                totalLeftForce: 0,\r\n                totalRightForce: 0,\r\n                leftItems: <any>[],\r\n                rightItems: <any>[],\r\n                gameEnd: false,\r\n                rotating: 0\r\n\r\n            };\r\n        case START_GAME:\r\n            return {\r\n\r\n                ...state,\r\n                gameState: !state.gameState,\r\n                started: true,\r\n                fallingItems: [...state.falingItems, {key: Date.now()}]\r\n\r\n            };\r\n        case GAME_OVER:\r\n            return {\r\n\r\n                ...state,\r\n                gameEnd: true,\r\n                gameState: !state.gameState\r\n\r\n            };\r\n        case FALLING_END:\r\n            return {\r\n\r\n                ...state,\r\n                leftItems: [...state.leftItems, action.payload],\r\n                leftWeight: state.leftWeight + parseInt(action.payload.weight),\r\n                totalLeftForce: state.totalLeftForce + parseInt(action.payload.force)\r\n            };\r\n        case NEW_RIGHT_ITEM:\r\n            return {\r\n\r\n                ...state,\r\n                rightItems: [...state.rightItems, action.payload],\r\n                rightWeight: state.rightWeight + parseInt(action.payload.weight),\r\n                totalRightForce: state.totalRightForce + parseInt(action.payload.force)\r\n\r\n            };\r\n        case NEW_FALLING_ITEM:\r\n            return {\r\n\r\n                ...state,\r\n                fallingItems: [...state.falingItems, {key: Date.now()}]\r\n\r\n            };\r\n        case ADD_POINTS:\r\n            return {\r\n\r\n                ...state,\r\n                totalPoints: state.totalPoints + action.payload.points\r\n\r\n            };\r\n        case ADD_LEFT:\r\n            return {\r\n\r\n                ...state,\r\n                leftWeight: state.leftWeight + action.payload.weight\r\n\r\n            };\r\n        case ADD_RIGHT:\r\n            return {\r\n\r\n                ...state,\r\n                rightWeight: state.rightWeight + action.payload.weight\r\n\r\n            };\r\n        case CALC_ROTATION:\r\n            return {\r\n                ...state,\r\n                rotating: action.payload.rotation\r\n            }\r\n\r\n        default: return state;\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default gameReducer;","import { combineReducers } from 'redux';\r\n\r\n\r\nimport gameReducer from './reducers/gameReducer/gameReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n    game: gameReducer\r\n\r\n});\r\n\r\n// export default rootReducer;\r\nexport type RootState = ReturnType<typeof rootReducer>","import { createStore } from 'redux';\r\n\r\nimport {rootReducer} from './rootReducer';\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n\r\nexport default store;","import React from 'react';\nimport { Provider, useDispatch } from 'react-redux';\nimport './App.css';\nimport { Content } from './Components/Content';\nimport { Header } from './Components/Header';\nimport store from './Store/store';\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <>\n        <Header />\n\n        <Content />\n      </>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}